<!DOCTYPE html>
<meta charset="utf-8">

<style>
  .zip {
    fill: none;
    stroke: #CCC;
    stroke-width: .5px;
  }
</style>

<body>
  <script src="http://d3js.org/d3.v6.min.js"></script>
  <script src="http://d3js.org/topojson.v3.min.js"></script>

  <script>
    window.us = <%=raw us_json %>;
    window.path = d3.geoPath()
    window.states = new Map(us.objects.states.geometries.map(d => [d.id, d.properties]))
    window.makeChloropleth = (data, scheme) => {
      const format = d => `${d}%`
      const domain = d3.extent(data, d => d[1])
      const color = d3.scaleQuantize(domain, scheme)
      const svg = d3.select("body").append("svg")
          .attr("viewBox", [0, 0, 975, 610]);

      // svg.append("g")
      //     .attr("transform", "translate(610,20)")
      //     .append(() => legend({color, title: data.title, width: 260}));

      svg.append("g")
        .selectAll("path")
        .data(topojson.feature(us, us.objects.counties).features)
        .join("a")
          .attr("href", d => `/counties/${d.id}`)
        .append("path")
          .attr("fill", d => color(data.get(d.id)))
          .attr("d", path)
        .append("title")
          .text(d => `${d.properties.name}, ${states.get(d.id.slice(0, 2)).name}
    ${format(data.get(d.id))}`);

      svg.append("path")
          .datum(topojson.mesh(us, us.objects.states, (a, b) => a !== b))
          .attr("fill", "none")
          .attr("stroke", "white")
          .attr("stroke-linejoin", "round")
          .attr("d", path);
    }
  </script>

  <script>
    makeChloropleth(new Map(<%=raw discomfort.to_json %>), d3.schemeGreens[9].reverse())
  </script>
</body>
</html>
